Index: devregs.c
===================================================================
--- devregs.c	(revision 94)
+++ devregs.c	(working copy)
@@ -18,6 +18,42 @@
 	"registers",	{Qregs},		0, 0600,
 };
 
+uchar
+inb(int reg)
+{
+	return *(uchar*)reg;
+}
+
+ushort
+insh(int reg)
+{
+	return *(ushort*)reg;
+}
+
+ulong
+inl(int reg)
+{
+	return *(ulong*)reg;
+}
+
+void
+outb(int reg, uchar b)
+{
+	*(uchar*)reg = b;
+}
+
+void
+outsh(int reg, ushort sh)
+{
+	*(ushort*)reg = sh;
+}
+
+void
+outl(int reg, ulong l)
+{
+	*(ulong*)reg = l;
+}
+
 static void
 regsinit(void)
 {
Index: archds.c
===================================================================
--- archds.c	(revision 94)
+++ archds.c	(working copy)
@@ -42,7 +42,7 @@
 archconfinit(void)
 {
 	conf.topofmem = EWRAMTOP;
-	m->cpuhz = 60000000;
+	m->cpuhz = 66*1000000;
 
 }
 
Index: sds
===================================================================
--- sds	(revision 94)
+++ sds	(working copy)
@@ -20,6 +20,7 @@
 	nds
 #	dldi
 	audio invhit
+#	tinyfs
 
 ip
 #	il
@@ -148,6 +149,8 @@
 	/dis/date.dis
 	/dis/time.dis
 	/dis/ftest.dis
+	/dis/mdb.dis
+	/dis/read.dis
 	/dis/lib/readdir.dis
 	/dis/lib/workdir.dis
 	/dis/lib/daytime.dis
@@ -155,6 +158,7 @@
 	/dis/lib/env.dis
 	/dis/lib/ssl.dis
 	/dis/lib/bufio.dis
+	/dis/lib/dis.dis
 
 # dhcp
 	/dis/lib/dhcpclient.dis
@@ -218,12 +222,18 @@
 	/icons/tk/maxf.bit
 	/icons/tk/exit.bit
 
-	/dis/lib/devpointer.dis
-	/dis/nds/touchprint.dis
-	/dis/nds/memfiddle.dis
-	/lib/registers/disp
-	/lib/registers/div
-	/lib/registers/main
-	/lib/registers/subdisp
-	/lib/registers/video
-	/lib/registers/wram
+	/icons/tinytk/task.bit
+	/icons/tinytk/maxf.bit
+	/icons/tinytk/exit.bit
+	/icons/tinytk/help.bit
+	/icons/tinytk/ok.bit
+
+#	/dis/lib/devpointer.dis
+#	/dis/nds/touchprint.dis
+#	/dis/nds/memfiddle.dis
+#	/lib/registers/disp
+#	/lib/registers/div
+#	/lib/registers/main
+#	/lib/registers/subdisp
+#	/lib/registers/video
+#	/lib/registers/wram
Index: devnds.c
===================================================================
--- devnds.c	(revision 94)
+++ devnds.c	(working copy)
@@ -4,6 +4,7 @@
 #include	"dat.h"
 #include	"fns.h"
 #include	"io.h"
+#include	"lcdreg.h"
 #include	"../port/error.h"
 #include	<keyboard.h>
 
@@ -17,6 +18,9 @@
 	Qctl,
 	Qinfo,
 	Qtouchctl,
+	Qfw,
+	Qrom,
+	Qsram,
 };
 
 enum {
@@ -48,7 +52,10 @@
 	".",		{Qdir, 0, QTDIR},		0,		0555,
 	"ndsctl",	{Qctl},		0,		0600,
 	"ndsinfo",	{Qinfo},	0,		0600,
-	"touchctl",	{Qtouchctl},	0,	0644,
+	"touchctl",	{Qtouchctl},	0,		0644,
+	"ndsfw",	{Qfw},		0,		0400,
+	"ndsrom",	{Qrom},		0,		0600,
+	"ndssram",	{Qsram},		0,		0600,
 };
 
 enum
@@ -85,8 +92,8 @@
 
 // TODO use Dbgbtn7 to enable debug; by toggling Conf.bmap = 2
 static	Rune	rockermap[3][Numbtns] ={
-	{'\n', Del, '\t', Esc, Right, Left, Up, Down, RCtrl, RShift, Pgup, Pgdown, No},	// right handed
-	{'\n', Del, '\t', Esc, Right, Left, Up, Down, RCtrl, RShift, Pgup, Pgdown, No},	// left handed
+	{'\n', 0x7f, '\t', Esc, Right, Left, Up, Down, RCtrl, RShift, Pgup, Pgdown, No},	// right handed
+	{'\n', 0x7f, '\t', Esc, Right, Left, Up, Down, RCtrl, RShift, Pgup, Pgdown, No},	// left handed
 	{'?', '|', Del, SysRq, Right, Left, Up, Down, RCtrl, RShift, Esc, No, No},	// debug
 };
 
@@ -134,6 +141,8 @@
 		setlcdblight(0);
 
 	for (i=0; i<nelem(rockermap[conf.bmap]); i++){
+		if (i == Lbtn || i == Rbtn)
+			continue;
 		if (kpressed(1<<i, ost, st)){
 			kbdrepeat(0);
 			kbdputc(kbdq, rockermap[conf.bmap][i]);
@@ -148,16 +157,36 @@
 }
 
 static void
-vblankintr()
+vblankintr(Ureg *, void *)
 {
 	int b;
 	static ulong ob;
+	int x, y;
+	PERSONAL_DATA *pd = PersonalData;
 
 	b = ndskeys();
+/*
 	if(b)
 		mousetrack(b, IPC->touchXpx, IPC->touchYpx, 0);
 	else if(ob)
 		mousetrack(b, 0, 0, 1);
+*/
+	if(b) {
+		x = (int)((IPC->touchXpx - (int)pd->calX1) * ((int)pd->calX2px - (int)pd->calX1px) / ((int)pd->calX2 - (int)pd->calX1)) + pd->calX1px - 1;
+		y = (int)((IPC->touchYpx - (int)pd->calY1) * ((int)pd->calY2px - (int)pd->calY1px) / ((int)pd->calY2 - (int)pd->calY1)) + pd->calY1px - 1;
+
+		if(x < 0)
+			x = 0;
+		else if(x > SCREEN_WIDTH-1)
+			x = SCREEN_WIDTH-1;
+		if(y < 0)
+			y = 0;
+		else if(y > SCREEN_HEIGHT-1)
+			y = SCREEN_HEIGHT-1;
+
+		mousetrack(b, x, y, 0);
+	} else if(ob)
+		mousetrack(b, 0, 0, 1);
 	
 	ob = b;
 	intrclear(VBLANKbit, 0);
@@ -166,9 +195,11 @@
 static void
 ndsinit(void)
 {
+	// TODO complete ndstab[Qrom].length,
+	// to respect mem available in the ROM cartridge
+	// add checks to see if we're not overriding anything valuable
+	
 	intrenable(0, VBLANKbit, vblankintr, 0, 0);
-	if (IPC->heartbeat > 1)
-		print("touch worked\n");
 }
 
 static Chan*
@@ -201,12 +232,37 @@
 {
 }
 
+
+/* settings flags */
+enum {
+	Nickmax	= 10,
+	Msgmax	= 26,
+
+	LJapanese = 0,
+	LEnglish,
+	LFrench,
+	LGerman,
+	LItalian,
+	LSpanish,
+	LChinese,
+	LOther,
+	Langmask	= 7,
+	Gbalowerscreen	= 1<<3,
+	Backlightshift	= 4,
+	Backlightmask	= 3,
+	Autostart	= 1<<6,
+	Nosettings	= 1<<9,
+};
+
 static long
 ndsread(Chan* c, void* a, long n, vlong offset)
 {
 	char *tmp, buf[64];
 	uchar reply[12];
 	int v, t, l;
+	char *p, *e;
+	int i;
+	PERSONAL_DATA *pd = PersonalData;
 
 	switch((ulong)c->qid.path){
 	case Qdir:
@@ -220,14 +276,59 @@
 			nexterror();
 		}
 		v = IPC->battery;
-		t = 0xff; // read console type, version from firmware
+		t = *((uchar*)0x1d); // read console type, version from firmware
 		snprint(tmp, READSTR, "ds type: %x %s\nbattery: %d %s\n",
 			t, (t == 0xff? "NDS" : "NDS-lite"), v, (v? "high" : "low"));
 		n = readstr(offset, a, n, tmp);
 		poperror();
 		free(tmp);
 		break;
+	case Qfw:
+		tmp = p = malloc(1024);
+		if(waserror()) {
+			free(tmp);
+			nexterror();
+		}
+		e = tmp+1024;
+
+/*
+ * TODO: access to fw could be also given as a raw ndsfw file
+		for(i = 0; i < 112; i++)
+			p = seprint(p, e, "%02ux%c", (uint)((uchar*)pd)[i], ((i+1) % 14 == 0) ? '\n' : ' ');
+		p = seprint(p, e, "\n");
+*/
+
+		p = seprint(p, e, "version %d color %d birthmonth %d birthday %d\n", pd->version, pd->theme, pd->birthMonth, pd->birthDay);
+		p = seprint(p, e, "nick %S\n", pd->name);
+		p = seprint(p, e, "msg %S\n", pd->message);
+		p = seprint(p, e, "alarm hour %d min %d on %d\n", pd->alarmHour, pd->alarmMinute, pd->alarmOn);
+		p = seprint(p, e, "adc1 x %d y %d, adc2 x %d y %d\n", pd->calX1, pd->calY1, pd->calX2, pd->calY2);
+		p = seprint(p, e, "scr1 x %d y %d, scr2 x %d y %d\n", pd->calX1px, pd->calY1px, pd->calX2px, pd->calY2px);
+		p = seprint(p, e, "flags 0x%02ux lang %d backlight %d", pd->flags,
+			pd->flags&Langmask, (pd->flags>>Backlightshift)&Backlightmask);
+		if(pd->flags & Gbalowerscreen)
+			seprint(p, e, " gbalowerscreen");
+		if(pd->flags & Autostart)
+			seprint(p, e, " autostart");
+		if(pd->flags & Nosettings)
+			seprint(p, e, " nosettings");
+		seprint(p, e, "\n");
+
+		n = readstr(offset, a, n, tmp);
+
+		poperror();
+		free(tmp);
+
+		break;
+
+	case Qrom:
+		memcpy(a, (void*)(ROMZERO+offset), n);
+		break;
+	case Qsram:
+		memcpy(a, (void*)(SRAMZERO+offset), n);
+		break;
 		
+		
 	default:
 		n=0;
 		break;
@@ -236,16 +337,26 @@
 }
 
 static long
-ndswrite(Chan* c, void* a, long n, vlong)
+ndswrite(Chan* c, void* a, long n, vlong offset)
 {
 	char cmd[64], op[32], *fielnds[6];
 	int nf;
+
 	switch((ulong)c->qid.path){
 	case Qctl:
 		break;
 	case Qtouchctl:
 		break;
 //		return touchctl(a, n);
+
+	case Qrom:
+		memcpy((void*)(ROMZERO+offset), a, n);
+		break;
+	case Qsram:
+		memcpy((void*)(SRAMZERO+offset), a, n);
+		break;
+		
+		
 	default:
 		error(Ebadusefd);
 	}
Index: mkfile
===================================================================
--- mkfile	(revision 94)
+++ mkfile	(working copy)
@@ -28,7 +28,6 @@
 	defont.$O\
 	main.$O\
 	trap.$O\
-	regs.$O\
 	$CONF.root.$O\
 	$IP\
 	$DEVS\
Index: dsinit.b
===================================================================
--- dsinit.b	(revision 94)
+++ dsinit.b	(working copy)
@@ -80,7 +80,6 @@
 	dobind("#e", "/env", sys->MREPL|sys->MCREATE);	# environment
 #	dobind("#A", "/dev", Sys->MAFTER);	# optional audio
 	dobind("#T", "/dev", sys->MAFTER);	# touch screen and other nds devices
-	dobind("#R", "/dev", Sys->MAFTER);	# registers
 
 	timefile: string;
 	rootsource: string;
Index: fns.h
===================================================================
--- fns.h	(revision 94)
+++ fns.h	(working copy)
@@ -129,11 +129,3 @@
 void dispfont(void);
 void consputs(char *str);
 
-/* regs.c;  *sh should be named *s... */
-uchar	inb(int reg);
-ushort	insh(int reg);
-ulong	inl(int reg);
-void	outb(int reg, uchar b);
-void	outsh(int reg, ushort sh);
-void	outl(int reg, ulong l);
-
Index: regs.c
===================================================================
--- regs.c	(revision 94)
+++ regs.c	(working copy)
@@ -1,38 +0,0 @@
-#include <u.h>
-
-uchar
-inb(int reg)
-{
-	return *(uchar*)reg;
-}
-
-ushort
-insh(int reg)
-{
-	return *(ushort*)reg;
-}
-
-ulong
-inl(int reg)
-{
-	return *(ulong*)reg;
-}
-
-void
-outb(int reg, uchar b)
-{
-	*(uchar*)reg = b;
-}
-
-void
-outsh(int reg, ushort sh)
-{
-	*(ushort*)reg = sh;
-}
-
-void
-outl(int reg, ulong l)
-{
-	*(ulong*)reg = l;
-}
-
Index: devaudio.c
===================================================================
--- devaudio.c	(revision 94)
+++ devaudio.c	(working copy)
@@ -121,6 +121,8 @@
 	return n;
 }
 
+// TODO: provive audio write support,
+// in order to play some audio files from devroot
 static long
 audiowrite(Chan *c, void *vp, long n, vlong)
 {
Index: lcd.c
===================================================================
--- lcd.c	(revision 94)
+++ lcd.c	(working copy)
@@ -59,11 +59,7 @@
 {
 	LcdReg *lcd = LCDREG;
 
-	if(on && (lcd->lcsr & EnableCtlr))
-		return;
-	if(!on && !(lcd->lcsr & EnableCtlr))
-		return;
-
+	// see 'Power Management Device' in gbatek.txt
 	/* enable/disable LCD */
 	if (on)
 		lcd->lcsr |= EnableCtlr;
@@ -85,7 +81,7 @@
 	lcd->lccr = 0;	
   	
  //	sublcd->lccr = MODE_0_2D | DISPLAY_BG0_ACTIVE;
-   	power->pcr = POWER_ALL_2D;
+   	power->pcr = (POWER_LCD |POWER_2D_A |POWER_2D_B);
  	lcd->lccr = MODE_FB0;
       	vram->acr = VRAM_ENABLE|VRAM_A_LCD;
 
Index: lcdreg.h
===================================================================
--- lcdreg.h	(revision 94)
+++ lcdreg.h	(working copy)
@@ -11,7 +11,7 @@
 	POWER_2D_B,			//!<	Controls the power for the sub 2D core.
 	POWER_SWAP_LCDS,	//!<	Controls which screen should use the main core.
 };
-#define POWER_ALL_2D     (POWER_LCD |POWER_2D_A |POWER_2D_B)
+
 #define SCREEN_HEIGHT 192
 #define SCREEN_WIDTH  256
 
Index: dat.h
===================================================================
--- dat.h	(revision 94)
+++ dat.h	(working copy)
@@ -231,3 +231,8 @@
 };
 
 #define	swcursor	1
+
+//enum {
+//	Screenwidth =	256,
+//	Screenheight =	192,
+//};
Index: mem.h
===================================================================
--- mem.h	(revision 94)
+++ mem.h	(working copy)
@@ -83,6 +83,7 @@
 #define	IRQCHECK9	0x00803FF8	/* notify NDS BIOS of end of int */
 #define	SFRZERO		0x04000000
 #define	ROMZERO		0x08000000
+#define	SRAMZERO	0x0A000000
 #define	EXMEMCNT	0x04000204
 #define	DTCMZERO	0x027C0000	/* NDS DTCM standard address */
 
Index: main.c
===================================================================
--- main.c	(revision 94)
+++ main.c	(working copy)
@@ -95,7 +95,7 @@
 	memset(m, 0, sizeof(Mach));	/* clear the mach struct */
 	m->machno = 1;
 	m->ticks = 1;
-	m->cpuhz = 60000000;
+	m->cpuhz = 66*1000000;
 }
 
 void
Index: arm7/userSettings.c
===================================================================
--- arm7/userSettings.c	(revision 94)
+++ arm7/userSettings.c	(working copy)
@@ -22,15 +22,14 @@
 			distribution.
 
 ---------------------------------------------------------------------------------*/
+#include <u.h>
+#include "../mem.h"
+#include <kern.h>
 
-#include <nds/arm7/serial.h>
-#include <nds/system.h>
-#include <string.h>
+#include "nds.h"
 
 
-void readUserSettings() {
-
-
+void readUserSettings(void) {
 	PERSONAL_DATA slot1;
 	PERSONAL_DATA slot2;
 
@@ -38,28 +37,31 @@
 	short slot1CRC, slot2CRC;
 
 	uint32 userSettingsBase;
-	readFirmware( 0x20, &userSettingsBase,2);
-	
-	uint32 slot1Address = userSettingsBase * 8;
-	uint32 slot2Address = userSettingsBase * 8 + 0x100;
-	
-	readFirmware( slot1Address , &slot1, sizeof(PERSONAL_DATA));
-	readFirmware( slot2Address , &slot2, sizeof(PERSONAL_DATA));
-	readFirmware( slot1Address + 0x70, &slot1count, 2);
-	readFirmware( slot2Address + 0x70, &slot2count, 2);
-	readFirmware( slot1Address + 0x72, &slot1CRC, 2);
-	readFirmware( slot2Address + 0x72, &slot2CRC, 2);
+	uint32 slot1Address, slot2Address;
+	short calc1CRC, calc2CRC;
 
-	 default to slot 1 user Settings
+	/* default to slot 1 user Settings */
 	void *currentSettings = &slot1;
 	
-	short calc1CRC = swiCRC16( 0xffff, &slot1, sizeof(PERSONAL_DATA));
-	short calc2CRC = swiCRC16( 0xffff, &slot2, sizeof(PERSONAL_DATA));
+	readFirmware( 0x20, &userSettingsBase, 2);
+	
+	slot1Address = userSettingsBase * 8;
+	slot2Address = userSettingsBase * 8 + 0x100;
+	
+	readFirmware(slot1Address , &slot1, sizeof(PERSONAL_DATA));
+	readFirmware(slot2Address , &slot2, sizeof(PERSONAL_DATA));
+	readFirmware(slot1Address + 0x70, &slot1count, 2);
+	readFirmware(slot2Address + 0x70, &slot2count, 2);
+	readFirmware(slot1Address + 0x72, &slot1CRC, 2);
+	readFirmware(slot2Address + 0x72, &slot2CRC, 2);
 
-	 bail out if neither slot is valid
+	calc1CRC = swiCRC16( 0xffff, &slot1, sizeof(PERSONAL_DATA));
+	calc2CRC = swiCRC16( 0xffff, &slot2, sizeof(PERSONAL_DATA));
+
+	/* bail out if neither slot is valid */
 	if ( calc1CRC != slot1CRC && calc2CRC != slot2CRC) return;
 	
-	 if both slots are valid pick the most recent
+	/* if both slots are valid pick the most recent */
 	if ( calc1CRC == slot1CRC && calc2CRC == slot2CRC ) { 
 		currentSettings = (slot2count == (( slot2count + 1 ) & 0x7f) ? &slot2 : &slot1);
 	} else {
@@ -67,5 +69,4 @@
 			currentSettings = &slot2;
 	}
 	memcpy ( PersonalData, currentSettings, sizeof(PERSONAL_DATA));
-	
 }
Index: arm7/l.s
===================================================================
--- arm7/l.s	(revision 94)
+++ arm7/l.s	(working copy)
@@ -23,10 +23,6 @@
 	B		dead
 //	BL		_div(SB)			/* hack to get _div etc loaded */
 
-TEXT swiHalt(SB), $-4
-	SWI	0x060000
-	RET
-
 TEXT swiDelay(SB), $-4
 	SWI	0x030000
 	RET
@@ -35,6 +31,10 @@
 	SWI	0x050000
 	RET
 
+TEXT swiHalt(SB), $-4
+	SWI	0x060000
+	RET
+
 TEXT swiDivide(SB), $-4
 	SWI	0x090000
 	RET
@@ -52,3 +52,7 @@
 	MOVW	R0, (R2)
 	MOVW	R1, (R3)
 	RET
+
+TEXT swiCRC16(SB), $-4
+	SWI	0x0E0000
+	RET
Index: arm7/mkfile
===================================================================
--- arm7/mkfile	(revision 94)
+++ arm7/mkfile	(working copy)
@@ -18,6 +18,7 @@
 	touch.$O\
 	microphone.$O\
 	interrupts.$O\
+	userSettings.$O\
 
 HFILES=
 LIBS=\
Index: arm7/system.h
===================================================================
--- arm7/system.h	(revision 94)
+++ arm7/system.h	(working copy)
@@ -117,7 +117,7 @@
 };
 
 
-void readUserSettings();
+void readUserSettings(void);
 
 
 //	User's DS settings.
@@ -128,18 +128,22 @@
 */
 #pragma hjdicks 1
 #pragma packed 1
-typedef struct _user_data  _user_data;
-struct _user_data {
-    	ulong langnscr;			//	User's language and screen. GBA screen selection (lower screen if set, otherwise upper screen).
-    	ushort defaultBrightness;	//	Brightness level at power on, dslite.
-    	uchar autoMode;		//	The DS should boot from the DS cart or GBA cart automatically if one is inserted.
-    	ushort RESERVED1;	//	???
-	uchar settingsLost;	//	User Settings Lost (0=Normal, 1=Prompt/Settings Lost)
-	uchar RESERVED2[6];			//	???
-  } ;
-  
+
+/* 
+  packed_struct {
+    unsigned language                   : 3;    //!<    User's language.
+    unsigned gbaScreen                  : 1;    //!<    GBA screen selection (lower screen if set, otherwise upper screen).
+    unsigned defaultBrightness  : 2;    //!<    Brightness level at power on, dslite.
+    unsigned autoMode                   : 1;    //!<    The DS should boot from the DS cart or GBA cart automatically if one is inserted.
+    unsigned RESERVED1                  : 2;    //!<    ???
+        unsigned settingsLost           : 1;    //!<    User Settings Lost (0=Normal, 1=Prompt/Settings Lost)
+        unsigned RESERVED2                      : 6;    //!<    ???
+  } _user_data;
+ */
+
 typedef struct tPERSONAL_DATA {
-  u8 RESERVED0[2];			//	??? (0x05 0x00).
+  u8 version;
+  u8 color;
 
   u8 theme;					//	The user's theme color (0-15).
   u8 birthMonth;			//	The user's birth month (1-12).
@@ -157,7 +161,8 @@
   u8 alarmMinute;			//	What minute the alarm clock is set to (0-59).
        //     0x027FFCD3  alarm minute
 
-  u8 RESERVED2[4];			//	???
+  u8 RESERVED2[2];			//	???
+  u16 alarmOn;
       //     0x027FFCD4  ??
 
   u16 calX1;				//	Touchscreen calibration: first X touch
@@ -170,8 +175,8 @@
   u8 calX2px;				//	Touchscreen calibration: second X touch pixel
   u8 calY2px;				//	Touchscreen calibration: second Y touch pixel
 
-	
-  _user_data;
+  u16 flags;				//	Described above: see struct _user_data
+
   u16	RESERVED3;
   u32	rtcOffset;
   u32	RESERVED4;
@@ -208,4 +213,4 @@
 
 // argv struct magic number
 #define argvMagic 0x5f617267
-void setytrig(int Yvalue);
\ No newline at end of file
+void setytrig(int Yvalue);
Index: arm7/touch.c
===================================================================
--- arm7/touch.c	(revision 94)
+++ arm7/touch.c	(working copy)
@@ -200,10 +200,11 @@
 {
 	int16 dmaxy, dmaxx, dmax;
 	u8 error, errloc, usedstylus, i;
+	uint32 oldIME;
+/*
 	static int tscinit = 0;
 	static s32 xscale, yscale;
 	static s32 xoff, yoff;
-	uint32 oldIME;
 	s16 px,py;
 	PERSONAL_DATA *pd=PersonalData;
 
@@ -218,6 +219,7 @@
 //		yoff=0;
 		tscinit=1;
 	}
+*/
 	oldIME = REG_IME;
 	REG_IME = 0;
 	usedstylus = chkstylus();
@@ -259,6 +261,7 @@
 			break;
 		}
 
+/*
 		// TODO get this right; ie: tp->x / 15 hangs arm7 cpu
 //		px=(tp->x*xscale-xoff+xscale/2)>>19;
 //		py=(tp->y*yscale-yoff+yscale/2)>>19;
@@ -275,6 +278,9 @@
 			py=Scrheight-1;
 		tp->px=px;
 		tp->py=py; 
+*/
+		tp->px = tp->x;
+		tp->py = tp->y;
 	}else{
 		errloc = 3;
 		tp->x = 0;
