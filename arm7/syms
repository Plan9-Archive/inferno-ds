sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

complex touchPosition VcountHandler:tp;
complex TransferSound VblankHandler:snd;
sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

complex IntTable irqset:t;
sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

sizeof_1_ = 8;
aggr _1_
{
	'U' 0 hi;
	'U' 4 lo;
};

defn
_1_(addr) {
	complex _1_ addr;
	print("	hi	", addr.hi, "\n");
	print("	lo	", addr.lo, "\n");
};

sizeofFPdbleword = 8;
aggr FPdbleword
{
	'F' 0 x;
	{
	'U' 0 hi;
	'U' 4 lo;
	};
};

defn
FPdbleword(addr) {
	complex FPdbleword addr;
	print("	x	", addr.x, "\n");
	print("_1_ {\n");
		_1_(addr+0);
	print("}\n");
};

sizeoftouchPosition = 12;
aggr touchPosition
{
	'd' 0 x;
	'd' 2 y;
	'd' 4 px;
	'd' 6 py;
	'd' 8 z1;
	'd' 10 z2;
};

defn
touchPosition(addr) {
	complex touchPosition addr;
	print("	x	", addr.x, "\n");
	print("	y	", addr.y, "\n");
	print("	px	", addr.px, "\n");
	print("	py	", addr.py, "\n");
	print("	z1	", addr.z1, "\n");
	print("	z2	", addr.z2, "\n");
};

sizeofDecompressionStream = 12;
aggr DecompressionStream
{
	'X' 0 getSize;
	'X' 4 getResult;
	'X' 8 readByte;
};

defn
DecompressionStream(addr) {
	complex DecompressionStream addr;
	print("	getSize	", addr.getSize\X, "\n");
	print("	getResult	", addr.getResult\X, "\n");
	print("	readByte	", addr.readByte\X, "\n");
};

sizeofUnpackStruct = 8;
aggr UnpackStruct
{
	'u' 0 sourceSize;
	'b' 2 sourceWidth;
	'b' 3 destWidth;
	'U' 4 dataOffset;
};

defn
UnpackStruct(addr) {
	complex UnpackStruct addr;
	print("	sourceSize	", addr.sourceSize, "\n");
	print("	sourceWidth	", addr.sourceWidth, "\n");
	print("	destWidth	", addr.destWidth, "\n");
	print("	dataOffset	", addr.dataOffset, "\n");
};

IRQ_VBLANK = 1;
IRQ_HBLANK = 2;
IRQ_VCOUNT = 4;
IRQ_TIMER0 = 8;
IRQ_TIMER1 = 16;
IRQ_TIMER2 = 32;
IRQ_TIMER3 = 64;
IRQ_NETWORK = 128;
IRQ_DMA0 = 256;
IRQ_DMA1 = 512;
IRQ_DMA2 = 1024;
IRQ_DMA3 = 2048;
IRQ_KEYS = 4096;
IRQ_CART = 8192;
IRQ_IPC_SYNC = 65536;
IRQ_FIFO_EMPTY = 131072;
IRQ_FIFO_NOT_EMPTY = 262144;
IRQ_CARD = 524288;
IRQ_CARD_LINE = 1048576;
IRQ_GEOMETRY_FIFO = 2097152;
IRQ_LID = 4194304;
IRQ_SPI = 8388608;
IRQ_WIFI = 16777216;
IRQ_ALL = -1;
IME_DISABLE = 0;
IME_ENABLE = 1;
sizeofIntTable = 8;
aggr IntTable
{
	'X' 0 handler;
	'U' 4 mask;
};

defn
IntTable(addr) {
	complex IntTable addr;
	print("	handler	", addr.handler\X, "\n");
	print("	mask	", addr.mask, "\n");
};

sizeofTransferSoundData = 16;
aggr TransferSoundData
{
	'X' 0 data;
	'U' 4 len;
	'U' 8 rate;
	'b' 12 vol;
	'b' 13 pan;
	'b' 14 format;
	'b' 15 PADDING;
};

defn
TransferSoundData(addr) {
	complex TransferSoundData addr;
	print("	data	", addr.data\X, "\n");
	print("	len	", addr.len, "\n");
	print("	rate	", addr.rate, "\n");
	print("	vol	", addr.vol, "\n");
	print("	pan	", addr.pan, "\n");
	print("	format	", addr.format, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeofTransferSound = 260;
aggr TransferSound
{
	'a' 0 data;
	'b' 256 count;
	'a' 257 PADDING;
};

defn
TransferSound(addr) {
	complex TransferSound addr;
	print("	data	", addr.data, "\n");
	print("	count	", addr.count, "\n");
	print("	PADDING	", addr.PADDING, "\n");
};

sizeof_2_ = 8;
aggr _2_
{
	'b' 0 cmd;
	'b' 1 year;
	'b' 2 month;
	'b' 3 day;
	'b' 4 weekday;
	'b' 5 hours;
	'b' 6 minutes;
	'b' 7 seconds;
};

defn
_2_(addr) {
	complex _2_ addr;
	print("	cmd	", addr.cmd, "\n");
	print("	year	", addr.year, "\n");
	print("	month	", addr.month, "\n");
	print("	day	", addr.day, "\n");
	print("	weekday	", addr.weekday, "\n");
	print("	hours	", addr.hours, "\n");
	print("	minutes	", addr.minutes, "\n");
	print("	seconds	", addr.seconds, "\n");
};

sizeof_3_ = 8;
aggr _3_
{
	'a' 0 curtime;
	_2_ 0 rtc;
};

defn
_3_(addr) {
	complex _3_ addr;
	print("	curtime	", addr.curtime, "\n");
	print("_2_ rtc {\n");
	_2_(addr.rtc);
	print("}\n");
};

sizeofTransferRegion = 60;
aggr TransferRegion
{
	'd' 0 touchX;
	'd' 2 touchY;
	'd' 4 touchXpx;
	'd' 6 touchYpx;
	'd' 8 touchZ1;
	'd' 10 touchZ2;
	'u' 12 tdiode1;
	'u' 14 tdiode2;
	'U' 16 temperature;
	'u' 20 buttons;
	_3_ 24 time;
	'D' 32 unixTime;
	'u' 36 battery;
	'u' 38 aux;
	'A' TransferSound 40 soundData;
	'U' 44 mailAddr;
	'U' 48 mailData;
	'b' 52 mailRead;
	'b' 53 mailBusy;
	'U' 56 mailSize;
};

defn
TransferRegion(addr) {
	complex TransferRegion addr;
	print("	touchX	", addr.touchX, "\n");
	print("	touchY	", addr.touchY, "\n");
	print("	touchXpx	", addr.touchXpx, "\n");
	print("	touchYpx	", addr.touchYpx, "\n");
	print("	touchZ1	", addr.touchZ1, "\n");
	print("	touchZ2	", addr.touchZ2, "\n");
	print("	tdiode1	", addr.tdiode1, "\n");
	print("	tdiode2	", addr.tdiode2, "\n");
	print("	temperature	", addr.temperature, "\n");
	print("	buttons	", addr.buttons, "\n");
	print("_3_ time {\n");
	_3_(addr.time);
	print("}\n");
	print("	unixTime	", addr.unixTime, "\n");
	print("	battery	", addr.battery, "\n");
	print("	aux	", addr.aux, "\n");
	print("	soundData	", addr.soundData\X, "\n");
	print("	mailAddr	", addr.mailAddr, "\n");
	print("	mailData	", addr.mailData, "\n");
	print("	mailRead	", addr.mailRead, "\n");
	print("	mailBusy	", addr.mailBusy, "\n");
	print("	mailSize	", addr.mailSize, "\n");
};

IPC_SYNC_IRQ_ENABLE = 16384;
IPC_SYNC_IRQ_REQUEST = 8192;
IPC_FIFO_SEND_EMPTY = 1;
IPC_FIFO_SEND_FULL = 2;
IPC_FIFO_SEND_IRQ = 4;
IPC_FIFO_SEND_CLEAR = 8;
IPC_FIFO_RECV_EMPTY = 256;
IPC_FIFO_RECV_FULL = 512;
IPC_FIFO_RECV_IRQ = 1024;
IPC_FIFO_ERROR = 16384;
IPC_FIFO_ENABLE = 32768;
sizeoftGBAHeader = 192;
aggr tGBAHeader
{
	'U' 0 entryPoint;
	'a' 4 logo;
	'a' 160 title;
	'a' 172 gamecode;
	'u' 176 makercode;
	'b' 178 is96h;
	'b' 179 unitcode;
	'b' 180 devicecode;
	'a' 181 unused;
	'b' 188 version;
	'b' 189 complement;
	'u' 190 checksum;
};

defn
tGBAHeader(addr) {
	complex tGBAHeader addr;
	print("	entryPoint	", addr.entryPoint, "\n");
	print("	logo	", addr.logo, "\n");
	print("	title	", addr.title, "\n");
	print("	gamecode	", addr.gamecode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	is96h	", addr.is96h, "\n");
	print("	unitcode	", addr.unitcode, "\n");
	print("	devicecode	", addr.devicecode, "\n");
	print("	unused	", addr.unused, "\n");
	print("	version	", addr.version, "\n");
	print("	complement	", addr.complement, "\n");
	print("	checksum	", addr.checksum, "\n");
};

sizeoftNDSHeader = 512;
aggr tNDSHeader
{
	'a' 0 gameTitle;
	'a' 12 gameCode;
	'a' 16 makercode;
	'b' 18 unitCode;
	'b' 19 deviceType;
	'b' 20 deviceSize;
	'a' 21 reserved1;
	'b' 30 romversion;
	'b' 31 flags;
	'U' 32 arm9romSource;
	'U' 36 arm9executeAddress;
	'U' 40 arm9destination;
	'U' 44 arm9binarySize;
	'U' 48 arm7romSource;
	'U' 52 arm7executeAddress;
	'U' 56 arm7destination;
	'U' 60 arm7binarySize;
	'U' 64 filenameSource;
	'U' 68 filenameSize;
	'U' 72 fatSource;
	'U' 76 fatSize;
	'U' 80 arm9overlaySource;
	'U' 84 arm9overlaySize;
	'U' 88 arm7overlaySource;
	'U' 92 arm7overlaySize;
	'U' 96 cardControl13;
	'U' 100 cardControlBF;
	'U' 104 bannerOffset;
	'u' 108 secureCRC16;
	'u' 110 readTimeout;
	'U' 112 unknownRAM1;
	'U' 116 unknownRAM2;
	'U' 120 bfPrime1;
	'U' 124 bfPrime2;
	'U' 128 romSize;
	'U' 132 headerSize;
	'a' 136 zeros88;
	'a' 192 gbaLogo;
	'u' 348 logoCRC16;
	'u' 350 headerCRC16;
	'U' 352 debugRomSource;
	'U' 356 debugRomSize;
	'U' 360 debugRomDestination;
	'U' 364 offset_0x16C;
	'a' 368 zero;
};

defn
tNDSHeader(addr) {
	complex tNDSHeader addr;
	print("	gameTitle	", addr.gameTitle, "\n");
	print("	gameCode	", addr.gameCode, "\n");
	print("	makercode	", addr.makercode, "\n");
	print("	unitCode	", addr.unitCode, "\n");
	print("	deviceType	", addr.deviceType, "\n");
	print("	deviceSize	", addr.deviceSize, "\n");
	print("	reserved1	", addr.reserved1, "\n");
	print("	romversion	", addr.romversion, "\n");
	print("	flags	", addr.flags, "\n");
	print("	arm9romSource	", addr.arm9romSource, "\n");
	print("	arm9executeAddress	", addr.arm9executeAddress, "\n");
	print("	arm9destination	", addr.arm9destination, "\n");
	print("	arm9binarySize	", addr.arm9binarySize, "\n");
	print("	arm7romSource	", addr.arm7romSource, "\n");
	print("	arm7executeAddress	", addr.arm7executeAddress, "\n");
	print("	arm7destination	", addr.arm7destination, "\n");
	print("	arm7binarySize	", addr.arm7binarySize, "\n");
	print("	filenameSource	", addr.filenameSource, "\n");
	print("	filenameSize	", addr.filenameSize, "\n");
	print("	fatSource	", addr.fatSource, "\n");
	print("	fatSize	", addr.fatSize, "\n");
	print("	arm9overlaySource	", addr.arm9overlaySource, "\n");
	print("	arm9overlaySize	", addr.arm9overlaySize, "\n");
	print("	arm7overlaySource	", addr.arm7overlaySource, "\n");
	print("	arm7overlaySize	", addr.arm7overlaySize, "\n");
	print("	cardControl13	", addr.cardControl13, "\n");
	print("	cardControlBF	", addr.cardControlBF, "\n");
	print("	bannerOffset	", addr.bannerOffset, "\n");
	print("	secureCRC16	", addr.secureCRC16, "\n");
	print("	readTimeout	", addr.readTimeout, "\n");
	print("	unknownRAM1	", addr.unknownRAM1, "\n");
	print("	unknownRAM2	", addr.unknownRAM2, "\n");
	print("	bfPrime1	", addr.bfPrime1, "\n");
	print("	bfPrime2	", addr.bfPrime2, "\n");
	print("	romSize	", addr.romSize, "\n");
	print("	headerSize	", addr.headerSize, "\n");
	print("	zeros88	", addr.zeros88, "\n");
	print("	gbaLogo	", addr.gbaLogo, "\n");
	print("	logoCRC16	", addr.logoCRC16, "\n");
	print("	headerCRC16	", addr.headerCRC16, "\n");
	print("	debugRomSource	", addr.debugRomSource, "\n");
	print("	debugRomSize	", addr.debugRomSize, "\n");
	print("	debugRomDestination	", addr.debugRomDestination, "\n");
	print("	offset_0x16C	", addr.offset_0x16C, "\n");
	print("	zero	", addr.zero, "\n");
};

sizeoftNDSBanner = 2112;
aggr tNDSBanner
{
	'u' 0 version;
	'u' 2 crc;
	'a' 4 reserved;
	'a' 32 icon;
	'a' 544 palette;
	'a' 576 titles;
};

defn
tNDSBanner(addr) {
	complex tNDSBanner addr;
	print("	version	", addr.version, "\n");
	print("	crc	", addr.crc, "\n");
	print("	reserved	", addr.reserved, "\n");
	print("	icon	", addr.icon, "\n");
	print("	palette	", addr.palette, "\n");
	print("	titles	", addr.titles, "\n");
};

POWER_SOUND = 0;
POWER_UNKNOWN = 1;
sizeof_user_data = 20;
aggr _user_data
{
	'U' 0 langnscr;
	'u' 4 defaultBrightness;
	'b' 6 autoMode;
	'u' 8 RESERVED1;
	'b' 10 settingsLost;
	'a' 11 RESERVED2;
};

defn
_user_data(addr) {
	complex _user_data addr;
	print("	langnscr	", addr.langnscr, "\n");
	print("	defaultBrightness	", addr.defaultBrightness, "\n");
	print("	autoMode	", addr.autoMode, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	settingsLost	", addr.settingsLost, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
};

sizeoftPERSONAL_DATA = 132;
aggr tPERSONAL_DATA
{
	'a' 0 RESERVED0;
	'b' 2 theme;
	'b' 3 birthMonth;
	'b' 4 birthDay;
	'a' 5 RESERVED1;
	'a' 6 name;
	'u' 26 nameLen;
	'a' 28 message;
	'u' 80 messageLen;
	'b' 82 alarmHour;
	'b' 83 alarmMinute;
	'a' 84 RESERVED2;
	'u' 88 calX1;
	'u' 90 calY1;
	'b' 92 calX1px;
	'b' 93 calY1px;
	'u' 94 calX2;
	'u' 96 calY2;
	'b' 98 calX2px;
	'b' 99 calY2px;
	{
	'U' 100 langnscr;
	'u' 104 defaultBrightness;
	'b' 106 autoMode;
	'u' 108 RESERVED1;
	'b' 110 settingsLost;
	'a' 111 RESERVED2;
	};
	'u' 120 RESERVED3;
	'U' 124 rtcOffset;
	'U' 128 RESERVED4;
};

defn
tPERSONAL_DATA(addr) {
	complex tPERSONAL_DATA addr;
	print("	RESERVED0	", addr.RESERVED0, "\n");
	print("	theme	", addr.theme, "\n");
	print("	birthMonth	", addr.birthMonth, "\n");
	print("	birthDay	", addr.birthDay, "\n");
	print("	RESERVED1	", addr.RESERVED1, "\n");
	print("	name	", addr.name, "\n");
	print("	nameLen	", addr.nameLen, "\n");
	print("	message	", addr.message, "\n");
	print("	messageLen	", addr.messageLen, "\n");
	print("	alarmHour	", addr.alarmHour, "\n");
	print("	alarmMinute	", addr.alarmMinute, "\n");
	print("	RESERVED2	", addr.RESERVED2, "\n");
	print("	calX1	", addr.calX1, "\n");
	print("	calY1	", addr.calY1, "\n");
	print("	calX1px	", addr.calX1px, "\n");
	print("	calY1px	", addr.calY1px, "\n");
	print("	calX2	", addr.calX2, "\n");
	print("	calY2	", addr.calY2, "\n");
	print("	calX2px	", addr.calX2px, "\n");
	print("	calY2px	", addr.calY2px, "\n");
	print("_user_data {\n");
		_user_data(addr+100);
	print("}\n");
	print("	RESERVED3	", addr.RESERVED3, "\n");
	print("	rtcOffset	", addr.rtcOffset, "\n");
	print("	RESERVED4	", addr.RESERVED4, "\n");
};

sizeof__argv = 12;
aggr __argv
{
	'D' 0 argvMagic;
	'X' 4 cmdLine;
	'D' 8 length;
};

defn
__argv(addr) {
	complex __argv addr;
	print("	argvMagic	", addr.argvMagic, "\n");
	print("	cmdLine	", addr.cmdLine\X, "\n");
	print("	length	", addr.length, "\n");
};

complex touchPosition touchReadXY:tp;
complex tPERSONAL_DATA touchReadXY:pd;
